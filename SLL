#include <stdio.h>

#include<stdlib.h>

typedef struct student

{

 char usn[10];

char name[30];

char branch[5];

int sem;

char phno[15];

 struct student *link;

}NODE;

NODE* getnode()

{

 NODE *x;

 x=(NODE*)malloc(sizeof(NODE));

 printf("\n Enter Student Details: ");

 scanf("%s %s %s %d %s",x->usn,x->name,x->branch,&x->sem,x->phno);

 x->link=NULL;

 return x;

}

NODE* insert_front(NODE* first)

{

NODE *temp;

temp=getnode();

if(first==NULL)

{

first=temp;

}

else

{

temp->link=first;

first=temp;

}

return first;

}

NODE* insert_rear(NODE* first)

{

 NODE *temp,*cur;

 temp=getnode();

 if(first==NULL)
 {

 first=temp;

 }

 else

 {

 cur=first;

 while(cur->link!=NULL)

 {

 cur=cur->link;

 }

 cur->link=temp;

 }

 return first;

}

NODE* delete_front(NODE* first)

{

 NODE *cur;

 if(first==NULL)

 {

 printf("\n List is empty\n");

 }

 else

 {

 cur=first;

 first=first->link;

 free(cur);

 }

 return first;

}

NODE* delete_rear(NODE *first)

{

 NODE *prev, *cur;

 if(first==NULL)

 {

 printf("\n List is empty\n");

 }

 if(first->link==NULL)

 {

 free(first);

 return NULL;

 }

 prev=NULL;

 cur=first;

 while(cur->link!=NULL)

 {

 prev=cur;

 cur=cur->link;

 }

 prev->link=NULL;
 free(cur);
 return first;
}
void display(NODE *first)
{
NODE *cur;
int count=0;
if(first == NULL)
printf("\nNo student data\n");
else
{
cur=first;
printf("\nUSN\t NAME\t Branch\t Sem\t Phno\n");
while(cur!=NULL)
{
 printf("\n %s\t %s\t %s\t %d\t %s\n", cur->usn, cur->name,cur->branch,cur->sem,cur->phno);
cur = cur->link;
count++;
}
printf("\nThe no. of nodes in list is: %d",count);
}
}
NODE* stack(NODE *first)
{
int ch;
while(1)
{
printf("\nSLL used as Stack...");
printf("\n 1.PUSH \t 2.POP\t3.Display\t 4.Exit\t");
printf("\nEnter your choice: ");
scanf("%d", &ch);
switch(ch)
{
case 1: first=insert_front(first); break;
case 2: first=delete_front(first); break;
 case 3: display(first); break;
case 4: exit(0);
}
}
return first;
}
int main()
{
 NODE *first=NULL;
 int ch;
 while(1)
 {
 printf("\n1.InsertFront\t 2. InsertRear\t 3.DeleteFront\t 4.DeleteRear\t 5.Display\t 6.Stack\t 

7.exit\n");

 printf("Enter Your Choice: ");

 scanf("%d",&ch);

 switch(ch)

 {

 case 1:first=insert_front(first);

 break;

 case 2:first=insert_rear(first);

 break;

 case 3:first=delete_front(first);

 break;

 case 4:first=delete_rear(first);

 break;

 case 5:display(first);

 break;

 case 6:first=stack(first);

 break;

 case 7:exit(0);

 break;

 default: printf("\n Invalid choice\n");

 break;

 }

 }

 return 0;

}
